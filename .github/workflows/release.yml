name: Release

on:
    release:
        types: [published]

permissions:
    contents: write

jobs:
    build:
        name: Build and Release
        runs-on: ubuntu-latest

        strategy:
            matrix:
                include:
                    - goos: linux
                      goarch: amd64
                      output: linux-x86_64
                    - goos: linux
                      goarch: arm64
                      output: linux-arm64
                    - goos: darwin
                      goarch: amd64
                      output: darwin-x86_64
                    - goos: darwin
                      goarch: arm64
                      output: darwin-arm64
                    - goos: windows
                      goarch: amd64
                      output: windows-x86_64.exe
                    - goos: windows
                      goarch: arm64
                      output: windows-arm64.exe

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.24"

            - name: Build binary
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
              run: |
                  mkdir -p bin dist

                  VERSION=${{ github.ref_name }}
                  COMMIT=${{ github.sha }}
                  DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
                  FILENAME=${{ matrix.output }}

                  if [[ "$FILENAME" == *.exe ]]; then
                    PLATFORM_ARCH="${FILENAME%.exe}"
                    BINARY_NAME="termodoro.exe"
                    ARCHIVE_NAME="termodoro-${VERSION}-${PLATFORM_ARCH}.zip"
                  else
                    PLATFORM_ARCH="$FILENAME"
                    BINARY_NAME="termodoro"
                    ARCHIVE_NAME="termodoro-${VERSION}-${PLATFORM_ARCH}.tar.gz"
                  fi

                  BUILD_DIR=./bin/${PLATFORM_ARCH}
                  mkdir -p "${BUILD_DIR}"

                  go build -ldflags="-s -w -X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${DATE}" \
                    -o "${BUILD_DIR}/${BINARY_NAME}" ./cmd/termodoro

                  chmod +x "${BUILD_DIR}/${BINARY_NAME}"

                  # Archive
                  if [[ "$FILENAME" == *.exe ]]; then
                    zip -j "dist/${ARCHIVE_NAME}" "${BUILD_DIR}/${BINARY_NAME}"
                  else
                    tar -czf "dist/${ARCHIVE_NAME}" -C "${BUILD_DIR}" "${BINARY_NAME}"
                  fi

            - name: Upload Release Asset
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  VERSION=${{ github.ref_name }}
                  FILENAME=${{ matrix.output }}

                  if [[ "$FILENAME" == *.exe ]]; then
                    PLATFORM_ARCH="${FILENAME%.exe}"
                    ARCHIVE_NAME="termodoro-${VERSION}-${PLATFORM_ARCH}.zip"
                  else
                    PLATFORM_ARCH="$FILENAME"
                    ARCHIVE_NAME="termodoro-${VERSION}-${PLATFORM_ARCH}.tar.gz"
                  fi

                  gh release upload "${VERSION}" "dist/${ARCHIVE_NAME}" --clobber
