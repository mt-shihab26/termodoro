name: Release

on:
    release:
        types: [published]

jobs:
    build:
        name: Build and Release
        runs-on: ubuntu-latest

        strategy:
            matrix:
                include:
                    - goos: linux
                      goarch: amd64
                      output: termodoro-linux-amd64
                    - goos: linux
                      goarch: arm64
                      output: termodoro-linux-arm64
                    - goos: darwin
                      goarch: amd64
                      output: termodoro-darwin-amd64
                    - goos: darwin
                      goarch: arm64
                      output: termodoro-darwin-arm64
                    - goos: windows
                      goarch: amd64
                      output: termodoro-windows-amd64.exe
                    - goos: windows
                      goarch: arm64
                      output: termodoro-windows-arm64.exe

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.24"

            - name: Build binary
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
              run: |
                  go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o ./bin/${{ matrix.output }} .

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./bin/${{ matrix.output }}
                  asset_name: ${{ matrix.output }}
                  asset_content_type: application/octet-stream
